plugins {
    id "com.android.library"
    id "kotlin-android"
    id "kotlin-parcelize"
    id "com.google.protobuf"
    id "kover"
    id("org.jetbrains.kotlin.plugin.serialization") version "1.7.20"

}

android {
    compileSdkVersion buildConfig.compileSdk
    buildToolsVersion buildConfig.buildTools

    defaultConfig {
        minSdkVersion buildConfig.minSdk
        targetSdkVersion buildConfig.targetSdk
        versionCode releaseConfig.versionCode
        versionName releaseConfig.version
    }

    buildTypes {
        debug {
            testCoverageEnabled true
            debuggable true
            minifyEnabled false
        }
        release {
            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.txt"
        }
    }

    namespace releaseConfig.group
    resourcePrefix "dbinspector_"

    lint {
        disable 'RtlEnabled', 'VectorPath', 'IconLocation'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
        freeCompilerArgs += [
                '-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi',
                '-Xexplicit-api=strict',
                '-Xjvm-default=all'
        ]
    }

    packagingOptions {
        exclude 'META-INF/INDEX.LIST'
    }

    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.all {
            kover {
                enabled = name == "testDebugUnitTest"
                includes = [
                        "com.infinum.dbinspector.data.sources.*",
                        "com.infinum.dbinspector.domain.*.*UseCase*.*",
                        "com.infinum.dbinspector.domain.*.*Repository*.*",
                        "com.infinum.dbinspector.domain.*.*Control*.*",
                        "com.infinum.dbinspector.domain.*.*Converter*.*",
                        "com.infinum.dbinspector.domain.*.*Mapper*.*",
                        "com.infinum.dbinspector.domain.*.*Interactor*.*",
                        "com.infinum.dbinspector.ui.*.*ViewModel*.*"
                ]
                excludes = [
                        "com.infinum.dbinspector.di.*",
                        "com.infinum.dbinspector.data.shared.base.*",
                        "com.infinum.dbinspector.domain.schema.shared.models.*",
                        "com.infinum.dbinspector.domain.shared.base.*",
                        "com.infinum.dbinspector.domain.shared.models.dsl.*",
                        "com.infinum.dbinspector.ui.shared.base.*",
                        "com.infinum.dbinspector.ui.shared.delegates.*",
                        "com.infinum.dbinspector.ui.shared.edgefactories.*",
                        "com.infinum.dbinspector.ui.shared.listeners.*",
                        "com.infinum.dbinspector.ui.shared.searchable.*",
                        "com.infinum.dbinspector.ui.shared.views.*",
                        "com.infinum.dbinspector.extensions.*",
                        "com.infinum.dbinspector.databinding.*"
                ]
            }
        }
    }

    sourceSets.each {
        it.proto.srcDirs += "src/$it.name/proto"
        it.java.srcDirs += "src/$it.name/kotlin"
    }

    buildFeatures {
        viewBinding true
    }

    publishing {
        singleVariant('release') {
            withSourcesJar()
            withJavadocJar()
        }
    }
}

dependencies {
    implementation libs.kotlin.core
    implementation libs.coroutines.android
    implementation libs.bundles.androidx
    implementation libs.protobuf.javalite
    implementation libs.material
    implementation libs.koin.android

    implementation("io.ktor:ktor-server-core:2.1.2")
    implementation("io.ktor:ktor-server-netty:2.1.2")
    implementation("io.ktor:ktor-server-content-negotiation:2.1.2")
    implementation("io.ktor:ktor-server-cors:2.1.2")
    implementation("io.ktor:ktor-serialization-kotlinx-json:2.1.2")
    implementation("io.ktor:ktor-server-status-pages:2.1.2")
    implementation("io.ktor:ktor-server-call-logging:2.1.2")

    testImplementation libs.bundles.test
}

protobuf {
    protoc {
        def protobufArtifact = libs.protobuf.artifact.get()
        artifact = protobufArtifact.getModule().toString() + ":" + protobufArtifact.getVersionConstraint().toString()
    }

    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option "lite"
                }
            }
        }
    }
}

kover {
    coverageEngine.set(kotlinx.kover.api.CoverageEngine.INTELLIJ)
    intellijEngineVersion.set(libs.versions.intellij.get())
    jacocoEngineVersion.set(libs.versions.jacoco.get())
    generateReportOnCheck = true
}

tasks.withType(Test) {
    useJUnitPlatform()
}

apply from: "publish.gradle"
